/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/8a442844-4155-4788-9678-001c43ee4944 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float heat_Index;
  float humidity;
  float soil_Moisture;
  float temperature;
  bool motor;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/
#include "DHT.h"
#include<Arduino.h>
#include <SoftwareSerial.h>
#define DHTPIN D2
#define SENSOR_IN A0
#define ACT D0
 // what digital pin we're connected to
// Uncomment whatever type you're using!
#define DHTTYPE DHT11 // DHT 11
DHT dht(DHTPIN, DHTTYPE);
#include "thingProperties.h"
SoftwareSerial s(3,1);
String pump;
void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  s.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 
 pinMode(A0,INPUT);

  pinMode(D0,OUTPUT);
  // Defined in thingProperties.h
  initProperties();
dht.begin();
  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  humidity = dht.readHumidity();
// Read temperature as Celsius
temperature= dht.readTemperature();
// Read temperature as Fahrenheit
float f= dht.readTemperature(true);
int soil=analogRead(SENSOR_IN);

soil_Moisture=map(soil, 704, 450, 0, 100);
// Check if any reads failed and exit early (to try again).
if (isnan(humidity)|| isnan(temperature) || isnan(f)) {
Serial.println("Failed to read from DHT sensor!");
return;
}
if (soil_Moisture>=49.00){
digitalWrite(ACT, HIGH); 
motor=false;
pump="OF ";
}
else if(soil_Moisture<=51.00){
 digitalWrite(ACT, LOW);
 motor=true;
 pump="ON ";
}
// Compute heat index
// Must send in temp in Fahrenheit!
heat_Index = dht.computeHeatIndex(f,humidity);
  String s1="T=";
  String s2=String(temperature);
  String s3="C ";
  String s4="H=";
  String s5=String(humidity);
  String line1=s1+s2+s3+s4+s5+"\n";
  char line3[15];
  line1.toCharArray(line3,line1.length()+1);
s.write(line3);
delay(4000);
Serial.println(line3);
 String s6="M=";
  String s7=String(soil_Moisture);
  String s8="% ";
  String s9="PUMP=";
  String s10=String(pump);
  String line2=s6+s7+s8+s9+s10+"\n";
  char line4[15];
 line2.toCharArray(line4,line2.length()+1);
s.write(line4);

Serial.println(line4);
delay(4000);
}
  

/*
  Since Motor is READ_WRITE variable, onMotorChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onMotorChange()  {
  if (motor==true){
    digitalWrite(ACT, HIGH); 
  }
  else{
    digitalWrite(ACT, LOW);
  }
}